on:
  push:
    branches: [main]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
name: macOS
jobs:
  macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: brew bundle
        continue-on-error: true
      - name: Make
        run: brew bundle exec -- make macos
      - name: Test
        run: brew bundle exec -- make test
      # - name: Create App Bundle
      #   run: |
      #     mkdir -p tuba-macos/Tuba.app/Contents/MacOS
      #     mv tuba-macos/bin/dev.geopjr.Tuba tuba-macos/Tuba.app/Contents/MacOS/
      #     mkdir -p tuba-macos/Tuba.app/Contents/Resources/lib
      #     mv tuba-macos/share/ tuba-macos/Tuba.app/Contents/Resources/
      #     otool -L tuba-macos/Tuba.app/Contents/MacOS/dev.geopjr.Tuba | grep '\/opt\/homebrew\/.*\.dylib' -o | xargs -I{} cp "{}" tuba-macos/Tuba.app/Contents/Resources/lib
      #     install_name_tool -add_rpath @loader_path/../Resources/lib tuba-macos/Tuba.app/Contents/MacOS/dev.geopjr.Tuba
      #     otool -L tuba-macos/Tuba.app/Contents/MacOS/dev.geopjr.Tuba | grep '\/opt\/homebrew\/.*\.dylib' -o | xargs -I{} sh -c 'install_name_tool -change {} @rpath/${1##*/} tuba-macos/Tuba.app/Contents/MacOS/dev.geopjr.Tuba' _ {}
      #     cp -r $(brew --prefix adwaita-icon-theme)/share/icons/* tuba-macos/Tuba.app/Contents/Resources/share/icons/
      # Run with XDG_DATA_DIRS=Tuba.app/Contents/Resources/share for now
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tuba_macos
          path: tuba_macos.dmg
          if-no-files-found: error
